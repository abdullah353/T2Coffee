var SettingsView,_ref,__hasProp={}.hasOwnProperty,__extends=function(d,b){for(var a in b){if(__hasProp.call(b,a)){d[a]=b[a];}}function c(){this.constructor=d;
}c.prototype=b.prototype;d.prototype=new c();d.__super__=b.prototype;return d;};SettingsView=(function(b){__extends(a,b);function a(){_ref=a.__super__.constructor.apply(this,arguments);
return _ref;}a.prototype.events={"click .save":"save"};a.prototype.initialize=function(c){return this.settings=c.settings;};a.prototype.updateModel=function(){return this.settings.set({context:this.$el.find("#context").val(),generalThreshold:parseFloat(this.$el.find("#generalThreshold").val()),language:this.$el.find("#language").val()});
};a.prototype.save=function(){this.updateModel();if(this.settings.save()){return Utils.midAlert("Settings saved");}else{return Utils.midAlert("Error. Settings weren't saved");
}};a.prototype.render=function(){var d,c,e;d=this.settings.escape("context");c=this.settings.escape("generalThreshold");e=this.settings.escape("language");
this.$el.html("<h1>"+(t("settings"))+"</h1>    <p>Please be careful with the following settings.</p>    <div class='menu_box'>      <div class='label_value'>        <label for='context'>Context</label><br>        <input id='context' type='text' value='"+d+"'>      </div>      <div class='label_value'>        <label for='context'>General Threshold</label><br>        <input id='generalThreshold' type='number' value='"+c+"'>      </div>      <div class='label_value'>        <label for='context'>Language</label><br>        <input id='language' type='number' value='"+e+"'>      </div>    </div><br>        <button class='command save'>Save</button>    ");
return this.trigger("rendered");};return a;})(Backbone.View);