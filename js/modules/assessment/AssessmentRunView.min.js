var AssessmentRunView,_ref,__hasProp={}.hasOwnProperty,__extends=function(d,b){for(var a in b){if(__hasProp.call(b,a)){d[a]=b[a];}}function c(){this.constructor=d;
}c.prototype=b.prototype;d.prototype=new c();d.__super__=b.prototype;return d;};AssessmentRunView=(function(a){__extends(b,a);function b(){_ref=b.__super__.constructor.apply(this,arguments);
return _ref;}b.prototype.initialize=function(d){var g,e,h,k,f,c,j=this;this.abortAssessment=false;this.index=0;this.model=d.model;this.orderMap=[];Tangerine.activity="assessment run";
this.subtestViews=[];this.model.subtests.sort();this.model.subtests.each(function(i){return j.subtestViews.push(new SubtestRunView({model:i,parent:j}));
});g=this.model.has("sequences")&&!_.isEmpty(_.compact(_.flatten(this.model.get("sequences"))));if(g){k=this.model.get("sequences");this.orderMap=k[Math.floor(Math.random()*k.length)];
this.orderMap[this.orderMap.length]=this.orderMap.length;}else{for(e=f=0,c=this.subtestViews.length;0<=c?f<=c:f>=c;e=0<=c?++f:--f){this.orderMap[e]=e;}}this.result=new Result({assessmentId:this.model.id,assessmentName:this.model.get("name"),blank:true});
if(g){this.result.set({order_map:this.orderMap});}h=new ResultView({model:this.result,assessment:this.model,assessmentView:this});return this.subtestViews.push(h);
};b.prototype.render=function(){var d,c=this;d=this.subtestViews[this.orderMap[this.index]];if(this.model.subtests.length===0){this.$el.append("<h1>Oops...</h1><p>This assessment is blank. Perhaps you meant to add some subtests.</p>");
}else{this.$el.html("        <h1>"+(this.model.get("name"))+"</h1>        <div id='progress' style='float:left;width:90%;margin-top:7px;'></div><div id='progressCount' style='float:right;color:#8cc63f;font-weight:bold;'></div><div class='clear' style='clear:both;'></div>      ");
if(this.index+1>2){this.$el.find("#progress").progressbar({value:(this.index-1)/(this.model.subtests.length-1)*100});}if(this.index+1>2){this.$el.find("#progressCount").html(""+(this.index-1)+"/"+(this.model.subtests.length-1));
}d.on("rendered",function(){return c.trigger("rendered");});d.on("subRendered",function(){return c.trigger("subRendered");});d.render();this.$el.append(d.el);
}return this.trigger("rendered");};b.prototype.onClose=function(){var e,f,d,c;c=this.subtestViews;for(f=0,d=c.length;f<d;f++){e=c[f];e.close();}this.result.clear();
$("#current_student_id").fadeOut(250,function(){return $(this).html("").show();});return $("#current_student").fadeOut(250);};b.prototype.abort=function(){this.abortAssessment=true;
return this.next();};b.prototype.skip=function(){var c;c=this.subtestViews[this.orderMap[this.index]];this.result.add({name:c.model.get("name"),data:c.getSkipped(),subtestId:c.model.id,skipped:true,prototype:c.model.get("prototype"),sum:c.getSum()});
c.close();if(this.abortAssessment!==true){this.index++;}if(this.abortAssessment===true){this.index=this.subtestViews.length-1;}this.render();return window.scrollTo(0,0);
};b.prototype.next=function(){var c;c=this.subtestViews[this.orderMap[this.index]];if(c.isValid()){this.result.add({name:c.model.get("name"),data:c.getResult(),subtestId:c.model.id,prototype:c.model.get("prototype"),sum:c.getSum()});
c.close();if(this.abortAssessment!==true){this.index++;}if(this.abortAssessment===true){this.index=this.subtestViews.length-1;}this.render();return window.scrollTo(0,0);
}else{return c.showErrors();}};return b;})(Backbone.View);