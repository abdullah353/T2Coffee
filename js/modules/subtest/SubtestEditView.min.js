var SubtestEditView,_ref,__bind=function(a,b){return function(){return a.apply(b,arguments);};},__hasProp={}.hasOwnProperty,__extends=function(d,b){for(var a in b){if(__hasProp.call(b,a)){d[a]=b[a];
}}function c(){this.constructor=d;}c.prototype=b.prototype;d.prototype=new c();d.__super__=b.prototype;return d;};SubtestEditView=(function(b){__extends(a,b);
function a(){this.goBack=__bind(this.goBack,this);_ref=a.__super__.constructor.apply(this,arguments);return _ref;}a.prototype.className="subtest_edit";
a.prototype.events={"click .back_button":"goBack","click .save_subtest":"save","click .edit_enumerator":"editEnumerator","click .enumerator_done":"doneEnumerator","click .enumerator_cancel":"cancelEnumerator","click .edit_student":"editStudent","click .student_done":"doneStudent","click .student_cancel":"cancelStudent"};
a.prototype.editEnumerator=function(){this.$el.find(".enumerator_help_preview, .edit_enumerator, .enumerator_save_buttons").fadeToggle(250);return this.$el.find("textarea#enumerator_help").html(this.model.escape("enumeratorHelp")||"").cleditor();
};a.prototype.doneEnumerator=function(){if(this.model.save({enumeratorHelp:this.$el.find("textarea#enumerator_help").val(),wait:true})){return this.cancelEnumerator();
}else{return console.log("save error");}};a.prototype.cancelEnumerator=function(){var c,d;c=$("div.enumerator_help_preview");c.html(this.model.get("enumeratorHelp")||"");
c.fadeIn(250);this.$el.find("button.edit_enumerator, .enumerator_save_buttons").fadeToggle(250);d=this.$el.find("#enumerator_help").cleditor()[0];d.$area.insertBefore(d.$main);
d.$area.removeData("cleditor");return d.$main.remove();};a.prototype.editStudent=function(){this.$el.find(".student_dialog_preview, .edit_student, .student_save_buttons").fadeToggle(250);
return this.$el.find("textarea#student_dialog").html(this.model.escape("studentDialog")||"").cleditor();};a.prototype.doneStudent=function(){if(this.model.save({studentDialog:this.$el.find("textarea#student_dialog").val(),wait:true})){return this.cancelStudent();
}else{return console.log("save error");}};a.prototype.cancelStudent=function(){var c,d;c=$("div.student_dialog_preview");c.html(this.model.get("studentDialog")||"");
c.fadeIn(250);this.$el.find("button.edit_student, .student_save_buttons").fadeToggle(250);d=this.$el.find("#student_dialog").cleditor()[0];d.$area.insertBefore(d.$main);
d.$area.removeData("cleditor");return d.$main.remove();};a.prototype.onClose=function(){var c;return typeof(c=this.prototypeEditor).close==="function"?c.close():void 0;
};a.prototype.initialize=function(c){this.model=c.model;this.assessment=c.assessment;this.config=Tangerine.config.subtest;this.prototypeViews=Tangerine.config.prototypeViews;
return this.prototypeEditor=new window[this.prototypeViews[this.model.get("prototype")]["edit"]]({model:this.model,parent:this});};a.prototype.goBack=function(){return Tangerine.router.navigate("edit/"+this.model.get("assessmentId"),true);
};a.prototype.save=function(f){var c,d,e;c=this.model.get("prototype");this.model.set({name:this.$el.find("#subtest_name").val(),enumeratorHelp:this.$el.find("#enumerator_help").val(),studentDialog:this.$el.find("#student_dialog").val(),skippable:this.$el.find("#skip_radio input:radio[name=skippable]:checked").val()==="true"});
if(typeof(d=this.prototypeEditor).save==="function"){d.save();}if((this.prototypeEditor.isValid!=null)&&this.prototypeEditor.isValid()===false){Utils.midAlert("There are errors on this page");
return typeof(e=this.prototypeEditor).showErrors==="function"?e.showErrors():void 0;}else{if(this.model.save(null,{wait:true})){Utils.midAlert("Subtest Saved");
return setTimeout(this.goBack,1000);}else{console.log("save error");return Utils.midAlert("Save error");}}};a.prototype.render=function(){var i,f,e,d,c,h,g;
i=this.assessment.escape("name");d=this.model.escape("name");c=this.model.get("prototype");e=this.model.get("enumeratorHelp")||"";f=this.model.get("studentDialog")||"";
h=this.model.get("skippable")===true||this.model.get("skippable")==="true";this.$el.html("      <button class='back_button navigation'>Back</button><br>      <h1>Subtest Editor</h1>      <table class='basic_info'>        <tr>          <th>Assessment</th>          <td>"+i+"</td>        </tr>      </table>      <button class='save_subtest command'>Done</button>      <div id='subtest_edit_form' class='edit_form'>        <div class='label_value'>          <label for='subtest_name'>Name</label>          <input id='subtest_name' value='"+d+"'>        </div>        <div class='label_value'>          <label for='subtest_prototype' title='This is a basic type of subtest. (e.g. Survey, Grid, Location, Id, Consent). This property is set in assessment builder when you add a subtest. It is unchangeable.'>Prototype</label><br>          <div class='info_box'>"+c+"</div>        </div>        <div class='label_value'>          <label>Skippable</label><br>          <div class='menu_box'>            <div id='skip_radio' class='buttonset'>              <label for='skip_true'>Yes</label><input name='skippable' type='radio' value='true' id='skip_true' "+(h?"checked":void 0)+">              <label for='skip_false'>No</label><input name='skippable' type='radio' value='false' id='skip_false' "+(!h?"checked":void 0)+">            </div>          </div>        </div>        <div class='label_value'>          <label for='enumerator_help' title='If text is supplied, a help button will appear at the top of the subtest as a reference for the enumerator. If you are pasting from word it is recommended to paste into a plain text editor first, and then into this box.'>Enumerator help <button class='edit_enumerator command'>Edit</button></label>          <div class='info_box_wide enumerator_help_preview'>"+e+"</div>          <textarea id='enumerator_help' class='confirmation'>"+e+"</textarea>          <div class='enumerator_save_buttons confirmation'>            <button class='enumerator_done command'>Save</button> <button class='enumerator_cancel command'>Cancel</button>          </div>        </div>        <div class='label_value'>          <label for='student_dialog' title='Generally this is a script that will be read to the student. If you are pasting from word it is recommended to paste into a plain text editor first, and then into this box.'>Student Dialog <button class='edit_student command'>Edit</button></label>          <div class='info_box_wide student_dialog_preview'>"+f+"</div>          <textarea id='student_dialog' class='confirmation'>"+f+"</textarea>          <div class='student_save_buttons confirmation'>            <button class='student_done command'>Save</button> <button class='student_cancel command'>Cancel</button>          </div>        </div>      </div>      <div id='prototype_attributes'></div>      <button class='save_subtest command'>Done</button>      ");
this.prototypeEditor.setElement(this.$el.find("#prototype_attributes"));if(typeof(g=this.prototypeEditor).render==="function"){g.render();}return this.trigger("rendered");
};return a;})(Backbone.View);